<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
    <sitecore>
        <pipelines>
            <startAnalytics>
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.Analytics.LoadShoppingCart, ActiveCommerce.Training.CartPersistence" />
            </startAnalytics>
            <endAnalytics>
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.Analytics.PersistShoppingCart, ActiveCommerce.Training.CartPersistence"
                           patch:before="processor[1]"/>
            </endAnalytics>

            <acPersistCart>
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.PersistCart.CheckCartUpdated, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.PersistCart.CheckArgs, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.PersistCart.ReadFromCart, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.PersistCart.PersistToCookie, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.PersistCart.PersistToCustomer, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.PersistCart.CheckIfCartUpdateEventIsSet, ActiveCommerce.Training.CartPersistence" />
            </acPersistCart>
          
            <acRestoreCart>
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.RestoreCart.CheckSessionInitialized, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.RestoreCart.CheckArgs, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.RestoreCart.ReadFromCookie, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.RestoreCart.ReadFromCustomer, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.RestoreCart.RestoreCouponCode, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.RestoreCart.RestoreProducts, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.RestoreCart.AddResultToSession, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.RestoreCart.SetCartUpdatedEvent, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.RestoreCart.SetSessionInitialized, ActiveCommerce.Training.CartPersistence" />
            </acRestoreCart>
          
            <acRestoreCartProduct>
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.RestoreCartProduct.CheckArgs, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.RestoreCartProduct.CheckProductInCart, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.RestoreCartProduct.CheckProductAvailable, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.RestoreCartProduct.CheckProductStock, ActiveCommerce.Training.CartPersistence" />
                <processor type="ActiveCommerce.Training.CartPersistence.Pipelines.RestoreCartProduct.AddProductToCart, ActiveCommerce.Training.CartPersistence" />
            </acRestoreCartProduct>
        </pipelines>

      <settings>
        <!-- Sets if the Cart Persistance is active or not.
             If Empty the default is False.-->
        <setting name="ActiveCommerce.Cart.Persistence.Active">
          <patch:attribute name="value">True</patch:attribute>
        </setting>

        <!-- The Customer Restore Strategy.
             This defines how the restore is handled in the event where the User 
             has a cart before signing in, and a cart exists on the registered user.
             
             Options:
             None = The users prior cart is used, overwritting the stored values on the Registered User on the next basket update.
             Merge = This merges the previous and the stored carts.
             Overwrite = This overwrites the previous basket with the one stored on the Registered User
             
             In all the cases when the cart is empty on sign in, the stored cart for the Registered User will be used.
             
             If Empty the default is "None".-->
        <setting name="ActiveCommerce.Cart.Persistence.CustomerRestoreStrategy">
          <patch:attribute name="value">None</patch:attribute>
        </setting>
      </settings>
    </sitecore>
</configuration>